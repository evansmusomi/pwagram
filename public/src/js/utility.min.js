const dbPromise=idb.open("posts-store",1,e=>{e.objectStoreNames.contains("posts")||e.createObjectStore("posts",{keyPath:"id"}),e.objectStoreNames.contains("sync-posts")||e.createObjectStore("sync-posts",{keyPath:"id"})});function writeData(e,t){return dbPromise.then(r=>{let n=r.transaction(e,"readwrite");return n.objectStore(e).put(t),n.complete})}function readAllData(e){return dbPromise.then(t=>{return t.transaction(e,"readonly").objectStore(e).getAll()})}function clearAllData(e){return dbPromise.then(t=>{let r=t.transaction(e,"readwrite");return r.objectStore(e).clear(),r.complete})}function deleteItemFromData(e,t){return dbPromise.then(r=>{let n=r.transaction(e,"readwrite");return n.objectStore(e).delete(t),n.complete}).then(()=>console.log("Item deleted"))}function urlBase64ToUint8Array(e){for(var t=(e+"=".repeat((4-e.length%4)%4)).replace(/\-/g,"+").replace(/_/g,"/"),r=window.atob(t),n=new Uint8Array(r.length),o=0;o<r.length;++o)n[o]=r.charCodeAt(o);return n}function dataURItoBlob(e){let t=atob(e.split(",")[1]),r=e.split(",")[0].split(":")[1].split(";")[0],n=new ArrayBuffer(t.length),o=new Uint8Array(n);for(let e=0;e<t.length;e++)o[e]=t.charCodeAt(e);return new Blob([n],{type:r})}